import static java.lang.Character.isWhitespace
import static java.lang.Character.toTitleCase

import java.time.Instant

ext {
	bumpVersion = { int index = releaseTypeOrdinal() ->
		def nextVersion = nextVersion(index)
		def propertiesFile = file 'gradle.properties'

		propertiesFile.text = propertiesFile.text.replaceAll "mod_version(\\s*=\\s*)${mod_version}", "mod_version\$1${nextVersion}"

		return nextVersion
	}

	fabricApiModule = { final def module, final def version = fabric_version ->
		return fabricApi.module(module, version)
	}
	
	nextVersion = { int index = releaseTypeOrdinal() ->
		def split = mod_version.split "\\."

		split[index] = (split[index] as Integer) + 1

		for (i in (index + 1) ..< split.length) {
			split[i] = 0
		}

		return split.join('.')
	}

	nonnegative = { final int i ->
		return i < 0 ? 0 : i
	}

	releaseTypeOrdinal = { ->
		switch (System.env.RELEASE_TYPE ?: 'alpha') {
		case 'release':
			return 0
		case 'beta':
			return 1
		default:
			return 2
		}
	}

	titleCased = { final String text ->
		final char[] textTitleCased = new char[text.size()]
		boolean titleCase = true

		for (i in 0 ..< text.size()) {
			char ch = text.charAt i

			if (!isWhitespace(ch)) {
				if (titleCase) {
					ch = toTitleCase ch
					titleCase = false
				}

				textTitleCased[i] = ch
			} else {
				titleCase = true
			}
		}

		return String.valueOf(textTitleCased)
	}
}
